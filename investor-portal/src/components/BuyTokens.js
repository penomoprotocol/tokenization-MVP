import React, { useState } from 'react';
import axios from 'axios';
import "./BuyTokens.css"

const BuyTokens = ({ token, closeModal, show }) => {
  const [tokenAmount, setTokenAmount] = useState('');
  const [responseMessage, setResponseMessage] = useState('');
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [hasAcceptedTerms, setHasAcceptedTerms] = useState(false);

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (!hasAcceptedTerms) {
      alert("Please accept the terms and conditions to proceed.");
      return;
    }
    setIsSubmitting(true);
    const userToken = localStorage.getItem('authToken');

    try {
      const payload = {
        tokenAmount,
        serviceContractAddress: token.serviceContractAddress,
        currency: token.currency
      };

      const response = await axios.post(`${process.env.REACT_APP_PENOMO_API}/api/investor/buyToken`, payload, {
        headers: { Authorization: `Bearer ${userToken}` }
      });

      setResponseMessage(response.data.message);
    } catch (error) {
      setResponseMessage(error.response ? error.response.data : 'Failed to purchase tokens.');
    } finally {
      setIsSubmitting(false);
    }
  };

  const handleClose = () => {
    setResponseMessage('');
    closeModal();
  };

  function roundToDecimals(numStr, decimals) {
    let num = parseFloat(numStr);
    if (isNaN(num)) return 'Invalid input';

    if (decimals === 0) {
        // If zero decimals, round to the nearest integer and format
        return Math.round(num);
    } else {
        // For non-zero decimals, format with specified number of decimal places
        return num.toLocaleString(undefined, {
            minimumFractionDigits: decimals,
            maximumFractionDigits: decimals,
        });
    }
}


  const tokenPriceDisplay = `${roundToDecimals(token.tokenPrice, 2)} ${token.currency}`;
  const transferableAmount = tokenAmount * token.tokenPrice;
  const buyButtonClasses = isSubmitting ? "btn-penomo btn-disabled btn-center" : "btn-penomo btn-center";

  if (!show) {
    return null;
  }

  return (
    <div className="popup">
      <div className="popup-content">
        <div className="popup-header">
          <h4>Buy Tokens for {token.name}</h4>
          <span className="close" onClick={handleClose}>&times;</span>
        </div>
        {!responseMessage ? (
          <form onSubmit={handleSubmit} className="token-purchase-form">
            <div className="horizontal-center price-display margin-bottom-2rem">
              <strong>Tokens Available:&nbsp;</strong><span>{roundToDecimals((token.fundingGoal-token.fundingCurrent)/token.tokenPrice, 0)}</span>
            </div>
            <div className="form-group">
              <label htmlFor="tokenAmount" className="form-label"><strong>Token Amount:</strong></label>
              <input
                type="number"
                id="tokenAmount"
                className="form-control"
                value={tokenAmount}
                onChange={(e) => setTokenAmount(e.target.value)}
                required
              />
            </div>
            <div className="horizontal-center price-display margin-bottom-2rem">
              <strong>Token Price:&nbsp;</strong><span>{tokenPriceDisplay}</span>
            </div>
            <div className="horizontal-center price-display margin-bottom-2rem">
              <strong>Transferable Amount:&nbsp;</strong>
              <span>{roundToDecimals(transferableAmount, 2)} {token.currency}</span>
            </div>
            <div className="terms-container">
              <h4>Terms and Conditions</h4>
              <div className="terms-text">
                <p><b>Terms and Conditions of Token Purchase Agreement</b></p>

                <p><b>1. Introduction</b></p>
                <p>Welcome to Penomo B.V. (Registration Number: 324324234252). These Terms and Conditions govern the purchase of digital tokens ("Tokens") representing a revenue share in a real-world renewable energy asset managed by Penomo B.V.</p>

                <p><b>2. Description of the Tokens</b></p>
                <p>The Tokens represent a proportional share of the revenue generated by the specified renewable energy asset. Holders of the Tokens are entitled to receive a percentage of the revenues according to the number of Tokens they hold.</p>

                <p><b>3. Acknowledgement of Risks</b></p>
                <p>By purchasing these Tokens, you acknowledge the risks associated with the investment, including but not limited to:
                  - <i>Market Risk:</i> The value of the Tokens may fluctuate due to market conditions beyond the control of Penomo B.V.
                  - <i>Regulatory Risk:</i> Changes in laws and regulations may impact the operation of the renewable energy asset or the Tokens.
                  - <i>Operational Risk:</i> The renewable energy asset's performance may be affected by operational issues, affecting revenue distribution.
                  - <i>Environmental Risk:</i> Natural events or disasters may impact the renewable energy asset's performance.</p>

                <p><b>4. No Guarantee of Profit</b></p>
                <p>Penomo B.V. does not guarantee any return on investment or profit from the purchase of these Tokens. Investors should be aware that they may lose some or all of their investment.</p>

                <p><b>5. Eligibility</b></p>
                <p>To be eligible to purchase Tokens, investors must meet certain criteria as set forth by Penomo B.V., including age and residency requirements.</p>

                <p><b>6. Token Purchase</b></p>
                <p>The purchase of Tokens is subject to availability and is conducted on a first-come, first-served basis. The price per Token and the minimum purchase amount are determined by Penomo B.V. and may be subject to change.</p>

                <p><b>7. Revenue Distribution</b></p>
                <p>Revenues from the renewable energy asset will be distributed to Token holders on a quarterly basis, subject to the operational performance of the asset.</p>

                <p><b>8. Transfer of Tokens</b></p>
                <p>Tokens may be transferred or sold to third parties, subject to the terms and conditions of the Token platform and applicable laws.</p>

                <p><b>9. Governing Law</b></p>
                <p>These Terms and Conditions are governed by the laws of Germany, and any disputes arising from them will be subject to the exclusive jurisdiction of the courts of Germany.</p>

                <p><b>10. Amendments</b></p>
                <p>Penomo B.V. reserves the right to amend these Terms and Conditions at any time. Continued holding of Tokens following any amendments constitutes acceptance of the new terms.</p>

                <p><b>11. Acceptance of Terms</b></p>
                <p>By purchasing Tokens, you acknowledge that you have read, understood, and agreed to these Terms and Conditions.</p>

              </div>
              <div className="accept-terms">
                <input
                  type="checkbox"
                  id="acceptTerms"
                  checked={hasAcceptedTerms}
                  onChange={(e) => setHasAcceptedTerms(e.target.checked)}
                  style={{ marginLeft: '1rem', marginBottom: '2rem' }}
                />
                <label htmlFor="acceptTerms" style={{ marginLeft: '1rem', marginBottom: '2rem' }}>I have read and understood the terms and conditions</label>
              </div>
            </div>
            <div className='horizontal-center'>
              <button type="submit" className={buyButtonClasses} disabled={isSubmitting}>
                {isSubmitting ? 'Processing...' : 'Buy'}
              </button>
            </div>
          </form>
        ) : (
          <>
            <p className='content-center'>{responseMessage}</p>
            <button className="btn-penomo btn-center" onClick={handleClose}>OK</button>
          </>
        )}
      </div>
    </div>
  );
};

export default BuyTokens;
